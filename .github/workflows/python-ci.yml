# mybookstore/.github/workflows/python-ci.yml

name: Python CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v3

    - name: Configura Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'  # Alinhado com o Pipfile

    - name: Cria .env.test para SQLite
      run: |
        echo "DB_USER=" > bookstore-api/.env.test
        echo "DB_PASS=" >> bookstore-api/.env.test
        echo "DB_HOST=" >> bookstore-api/.env.test
        echo "DB_PORT=" >> bookstore-api/.env.test
        echo "DB_NAME=test.db" >> bookstore-api/.env.test

    - name: Instala o Pipenv e dependências
      working-directory: ./bookstore-api
      run: |
        pip install --upgrade pip
        pip install pipenv
        pipenv install --dev --deploy

    - name: Define PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)/bookstore-api" >> $GITHUB_ENV

    - name: Lint, Typecheck e Format Check
      working-directory: ./bookstore-api
      run: |
        make check

    - name: Executa testes com cobertura
      working-directory: ./bookstore-api
      env:
        ENV_FILE: .env.test
      run: |
        make test

    - name: Salva relatório de cobertura
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: bookstore-api/htmlcov
